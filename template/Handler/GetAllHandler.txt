func (h *[name]Handler) GetAll[nameUpper]s(c *gin.Context) {

	var paging helper.Paging

	err := c.ShouldBindJSON(&paging)
	if err != nil {
		errorMessage := gin.H{"errors": err.Error()}

		response := helper.APIResponse("Get [nameUpper] Failed", http.StatusUnprocessableEntity, "Failed", errorMessage)
		c.JSON(http.StatusUnprocessableEntity, response)
		return
	}

	[name]s, count, err := h.[name]Service.GetAll[nameUpper](helper.SetPagingDefault(paging))

	if err != nil {
		errorMessage := gin.H{"errors": err.Error()}

		response := helper.APIResponse("Get All [nameUpper] Failed", http.StatusUnprocessableEntity, "Failed", errorMessage)
		c.JSON(http.StatusUnprocessableEntity, response)
		return
	}

	result := formatter.PaginatedItemsFormatter{}
	result.Format(paging.Page, float64(len([name]s)), float64(count), [name]s)

	response := helper.APIResponse("Get All [nameUpper] Success", http.StatusOK, "Success", result)

	c.JSON(http.StatusOK, response)
}